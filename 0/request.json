{"dependencies":[{"uri":"file:///usr/local/Cellar/dart-editor/25017/dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"file:///usr/local/Cellar/dart-editor/25017/dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"","id":"0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"},{"uri":"package:http/src/base_request.dart","name":"package:http/src/base_request.dart","id":"base_request","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"The base class for HTTP requests.\n\nSubclasses of [BaseRequest] can be constructed manually and passed to\n[BaseClient.send], which allows the user to provide fine-grained control\nover the request properties. However, usually it's easier to use convenience\nmethods like [get] or [BaseClient.get].","name":"BaseRequest","id":"BaseRequest","children":[{"isSetter":true,"name":"contentLength=","id":"contentLength=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"36","kind":"method"},{"isSetter":true,"name":"persistentConnection=","id":"persistentConnection=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"46","kind":"method"},{"isSetter":true,"name":"followRedirects=","id":"followRedirects=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"56","kind":"method"},{"isSetter":true,"name":"maxRedirects=","id":"maxRedirects=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"byte_stream/ByteStream","name":"ByteStream"},"comment":"Finalizes the HTTP request in preparation for it being sent. This freezes\nall mutable fields and returns a single-subscription [ByteStream] that\nemits the body of the request.\n\nThe base implementation of this returns null rather than a [ByteStream];\nsubclasses are responsible for creating the return value, which should be\nsingle-subscription to ensure that no data is dropped. They should also\nfreeze any additional mutable fields they add that don't make sense to\nchange after the request headers are sent.","name":"finalize","id":"finalize0()","line":"95","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"streamed_response/StreamedResponse","name":"StreamedResponse"}],"name":"Future"},"comment":"Sends this request.\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those\nrequests.","name":"send","id":"send0()","line":"108","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Throws an error if this request has been finalized.","name":"_checkFinalized","isPrivate":true,"id":"_checkFinalized0()","line":"128","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"133","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The size of the request body, in bytes. This defaults to -1, which\nindicates that the size of the request is not known in advance.","name":"contentLength","id":"contentLength","line":"33","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether a persistent connection should be maintained with the server.\nDefaults to true.","name":"persistentConnection","id":"persistentConnection","line":"43","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether the client should follow redirects while resolving this request.\nDefaults to true.","name":"followRedirects","id":"followRedirects","line":"53","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The maximum number of redirects to follow when [followRedirects] is true.\nIf this number is exceeded the [BaseResponse] future will signal a\n[RedirectException]. Defaults to 5.","name":"maxRedirects","id":"maxRedirects","line":"64","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether the request has been finalized.","name":"finalized","id":"finalized","line":"79","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"comment":"The HTTP method of the request. Most commonly \"GET\" or \"POST\", less\ncommonly \"HEAD\", \"PUT\", or \"DELETE\". Non-standard method names are also\nsupported.","name":"method","id":"method","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/Uri","name":"Uri"},"isFinal":true,"comment":"The URL to which the request will be sent.","name":"url","id":"url","line":"29","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_contentLength","isPrivate":true,"id":"_contentLength","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_persistentConnection","isPrivate":true,"id":"_persistentConnection","line":"44","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_followRedirects","isPrivate":true,"id":"_followRedirects","line":"54","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_maxRedirects","isPrivate":true,"id":"_maxRedirects","line":"65","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isFinal":true,"comment":"The headers for this request.","name":"headers","id":"headers","line":"76","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_finalized","isPrivate":true,"id":"_finalized","line":"80","kind":"variable"},{"comment":"Creates a new HTTP request.","name":"","id":"2()","children":[{"initializedField":{"refId":"base_request/BaseRequest/method","name":"method"},"ref":{"refId":"dart.core/String","name":"String"},"name":"method","id":"method","kind":"param"},{"initializedField":{"refId":"base_request/BaseRequest/url","name":"url"},"ref":{"refId":"dart.core/Uri","name":"Uri"},"name":"url","id":"url","kind":"param"}],"line":"83","kind":"constructor"}],"line":"22","kind":"class"}],"line":"5","kind":"library"}],"uri":"package:http/src/request.dart","name":"package:http/src/request.dart","id":"request","children":[{"superclass":{"refId":"base_request/BaseRequest","name":"BaseRequest"},"comment":"An HTTP request where the entire request body is known in advance.","name":"Request","id":"Request","children":[{"isSetter":true,"name":"contentLength=","id":"contentLength=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"24","kind":"method"},{"isSetter":true,"name":"encoding=","id":"encoding=1()","children":[{"ref":{"refId":"dart.io/Encoding","name":"Encoding"},"name":"value","id":"value","kind":"param"}],"line":"54","kind":"method"},{"isSetter":true,"name":"bodyBytes=","id":"bodyBytes=1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"value","id":"value","kind":"param"}],"line":"75","kind":"method"},{"isSetter":true,"name":"body=","id":"body=1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"89","kind":"method"},{"isSetter":true,"name":"bodyFields=","id":"bodyFields=1()","children":[{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"fields","id":"fields","kind":"param"}],"line":"127","kind":"method"},{"returnType":{"refId":"byte_stream/ByteStream","name":"ByteStream"},"comment":"Freezes all mutable fields and returns a single-subscription [ByteStream]\ncontaining the request body.","name":"finalize","id":"finalize0()","line":"146","kind":"method"},{"isSetter":true,"name":"_contentType=","isPrivate":true,"id":"_contentType=1()","children":[{"ref":{"refId":"dart.io/ContentType","name":"ContentType"},"name":"value","id":"value","kind":"param"}],"line":"159","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Throw an error if this request has been finalized.","name":"_checkFinalized","isPrivate":true,"id":"_checkFinalized0()","line":"164","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The size of the request body, in bytes. This is calculated from\n[bodyBytes].\n\nThe content length cannot be set for [Request], since it's automatically\ncalculated from [bodyBytes].","name":"contentLength","id":"contentLength","line":"22","kind":"property"},{"ref":{"refId":"dart.io/Encoding","name":"Encoding"},"comment":"The encoding used for the request. This encoding is used when converting\nbetween [bodyBytes] and [body].\n\nIf the request has a `Content-Type` header and that header has a `charset`\nparameter, that parameter's value is used as the encoding. Otherwise, if\n[encoding] has been set manually, that encoding is used. If that hasn't\nbeen set either, this defaults to [Encoding.UTF_8].\n\nIf the `charset` parameter's value is not a known [Encoding], reading this\nwill throw a [FormatException].\n\nIf the request has a `Content-Type` header, setting this will set the\ncharset parameter on that header.","name":"encoding","id":"encoding","line":"47","kind":"property"},{"ref":{"refId":"dart.typed_data/Uint8List","name":"Uint8List"},"comment":"The bytes comprising the body of the request. This is converted to and\nfrom [body] using [encoding].\n\nThis list should only be set, not be modified in place.","name":"bodyBytes","id":"bodyBytes","line":"72","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"The body of the request as a string. This is converted to and from\n[bodyBytes] using [encoding].\n\nWhen this is set, if the request does not yet have a `Content-Type`\nheader, one will be added with the type `text/plain`. Then the `charset`\nparameter of the `Content-Type` header (whether new or pre-existing) will\nbe set to [encoding] if it wasn't already set.","name":"body","id":"body","line":"87","kind":"property"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"comment":"The form-encoded fields in the body of the request as a map from field\nnames to values. The form-encoded body is converted to and from\n[bodyBytes] using [encoding] (in the same way as [body]).\n\nIf the request doesn't have a `Content-Type` header of\n`application/x-www-form-urlencoded`, reading this will throw a\n[StateError].\n\nIf the request has a `Content-Type` header with a type other than\n`application/x-www-form-urlencoded`, setting this will throw a\n[StateError]. Otherwise, the content type will be set to\n`application/x-www-form-urlencoded`.\n\nThis map should only be set, not modified in place.","name":"bodyFields","id":"bodyFields","line":"117","kind":"property"},{"ref":{"refId":"dart.io/ContentType","name":"ContentType"},"comment":"The `Content-Type` header of the request (if it exists) as a\n[ContentType].","name":"_contentType","isPrivate":true,"id":"_contentType","line":"153","kind":"property"},{"ref":{"refId":"dart.io/Encoding","name":"Encoding"},"comment":"The default encoding to use when converting between [bodyBytes] and\n[body]. This is only used if [encoding] hasn't been manually set and if\nthe content-type header has no encoding information.","name":"_defaultEncoding","isPrivate":true,"id":"_defaultEncoding","line":"32","kind":"variable"},{"ref":{"refId":"dart.typed_data/Uint8List","name":"Uint8List"},"name":"_bodyBytes","isPrivate":true,"id":"_bodyBytes","line":"73","kind":"variable"},{"comment":"Creates a new HTTP request.","name":"","id":"2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"method","id":"method","kind":"param"},{"ref":{"refId":"dart.core/Uri","name":"Uri"},"name":"url","id":"url","kind":"param"}],"line":"139","kind":"constructor"}],"line":"16","kind":"class"}],"line":"5","kind":"library"}